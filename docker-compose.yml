version: "3"


services:
    app:
        container_name: architecture-patterns-app
        build: .
        image: app
        depends_on:
            redis_pubsub:
                condition: service_started
            postgres:
                condition: service_healthy
            mailhog:
                condition: service_started
        healthcheck:
            test: curl -f http://app:8000 || exit 1
            interval: 5s
            timeout: 5s
            retries: 5
        environment:
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_PASSWORD=abc123
            - DB_DRIVER=postgresql+psycopg2
            - REDIS_HOST=redis
            - API_HOST=api
            - PYTHONDONTWRITEBYTECODE=1
        volumes:
            -   type: bind
                source: ./allocation
                target: /allocation
            -   type: bind
                source: ./tests
                target: /tests
        networks:
            - server
        links:
            - postgres
        ports:
            - "8000:8000"


    postgres:
        image: postgres:15.4
        container_name: architecture-patterns-db
        environment:
            - POSTGRES_USER=allocation
            - POSTGRES_PASSWORD=abc123
            - POSTGRES_DB=warehouse
        networks:
            - server
        ports:
            - "5432:5432"
        healthcheck:
            test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
            interval: 5s
            timeout: 5s
            retries: 5



    tests:
        container_name: architecture-patterns-tests
        build: .
        depends_on:
            app:
                condition: service_healthy
        entrypoint: pytest /tests -v
        volumes:
            -   type: bind
                source: ./allocation
                target: /allocation
            -   type: bind
                source: ./tests
                target: /tests
        networks:
            - server
        environment:
            - DB_HOST=postgres
            - DB_PORT=5432
            - DB_PASSWORD=abc123
            - REDIS_HOST=redis
            - API_HOST=http://app
            - API_PORT=8000
            - PYTHONUNBUFFERED=1


    redis_pubsub:
        build: .
        image: allocation-image
        container_name: redis_pubsub
        depends_on:
            - postgres
            - redis
        networks:
            - server
        environment:
            - DB_HOST=postgres
            - DB_PASSWORD=abc123
            - REDIS_HOST=redis
            - PYTHONDONTWRITEBYTECODE=1
        volumes:
            -   type: bind
                source: ./allocation
                target: /allocation
            -   type: bind
                source: ./tests
                target: /tests
        entrypoint:
            - python
            - /allocation/src/entrypoints/redis_eventconsumer.py

    redis:
        image: redis:alpine
        container_name: redis
        networks:
            - server
        ports:
            - "6379:6379"

    mailhog:
        image: mailhog/mailhog
        container_name: mailhog
        ports:
            - "1025:1025"
            - "8025:8025"
        networks:
            - server
networks:
    server: { }
